body {
  font-family: 'Arial', sans-serif;
  background-color: #f4f4f4;
  margin: 0;
  padding: 0;
}

.container {
  max-width: 600px;
  margin: 50px auto;
  padding: 20px;
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
  text-align: center;
}

div {
  margin-bottom: 15px;
}

label {
  display: block;
  margin-bottom: 5px;
}

input {
  width: 100%;
  padding: 8px;
  box-sizing: border-box;
}

button {
  background-color: #4caf50;
  color: white;
  padding: 10px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-top: 10px;
}

button:hover {
  background-color: #45a049;
}

#result {
  margin-top: 20px;
}
function searchLocation() {
    const cityInput = document.getElementById('cityInput');
    const resultElement = document.getElementById('result');

    const city = cityInput.value.trim();

    if (city === '') {
        resultElement.textContent = 'Please enter a city.';
        return;
    }

    const apiUrl = https://geocode.maps.co/search?city=${encodeURIComponent(city)};

    fetch(apiUrl)
        .then(response => {
            if (!response.ok) {
                throw new Error(HTTP error! Status: ${response.status});
            }
            return response.json();
        })
        .then(data => {
            console.log('API Response:', data);

            if (data && data.length > 0) {
                const firstResult = data[0];
                if (firstResult.lat && firstResult.lon) {
                    const latitude = firstResult.lat;
                    const longitude = firstResult.lon;
                    const displayName = firstResult.display_name;
                    resultElement.textContent = Location of ${displayName}: Latitude ${latitude}, Longitude ${longitude};
                } else {
                    resultElement.textContent = 'Latitude and Longitude information not available for the first result.';
                }
            } else {
                resultElement.textContent = 'Location not found.';
            }
        })
        .catch(error => {
            console.error('Error fetching data:', error);
            resultElement.textContent = 'An error occurred while fetching data.';
        });
}
